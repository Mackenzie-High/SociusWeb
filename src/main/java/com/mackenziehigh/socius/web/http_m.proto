syntax = "proto2";

package com.mackenziehigh.socius.web;
option java_package = "com.mackenziehigh.socius.web";

/**
 * HTTP Request.
 */
message Request
{
    /**
     * Use this field to attach debugging information.
     */
    repeated string debug = 1;

    /**
     * Human readable name of the server receiving the request.
     */
    optional string serverName = 2;

    /**
     * Universally-Unique-Identifier of the server receiving the request.
     *
     * <p>
     * This value is unique to a server, per lifetime.
     * If the server restarts, then it will use a different UUID.
     * </p>
     */
    optional string serverId = 3;

    /**
     * Reserved For Application Use.
     */
    optional string replyTo = 4;

    /**
     * Universally-Unique-Identifier of a single request.
     */
    optional string correlationId = 5;

    /**
     * Sequence number of requests coming from this server.
     */
    optional int64 sequenceNumber = 6;

    /**
     * A Java-compatible timestamp indicating when the request was received.
     */
    optional uint64 timestamp = 7;

    /**
     * Request Protocol.
     */
    optional Protocol protocol = 8;

    /**
     * HTTP Verb of the request (GET/POST/etc).
     */
    optional string method = 9;

    /**
     * Requested URI.
     */
    optional string uri = 10;

    /**
     * Requested Path of URI.
     */
    optional string path = 11;

    /**
     * Raw Requested Path of URI.
     */
    optional string rawPath = 12;

    /**
     * Raw Query String.
     */
    optional string rawQuery = 13;

    /**
     * Query Parameters.
     */
    map<string, QueryParameter> parameters = 14;

    /**
     * Raw HTTP Headers.
     */
    map<string, Header> headers = 15;

    /**
     * Client Host.
     */
    optional string host = 16;

    /**
     * HTTP cookies from the client.
     */
    repeated Cookie cookies = 17;

    /**
     * MIME Type of the body.
     */
    optional string contentType = 18;

    /**
     * Length of the body.
     */
    optional int32 contentLength = 19;

    /**
     * Body of the request.
     */
    optional bytes body = 20;
}

/**
 * HTTP Response.
 */
message Response
{
    /**
     * Use this field to attach debugging information.
     */
    repeated string debug = 1;

    /**
     * (optional) is the HTTP request that precipitated this response.
     */
    optional Request request = 2;

    /**
     * Universally-Unique-Identifier both the request and the response.
     */
    optional string correlationId = 3;

    /**
     * When this response was created.
     */
    optional uint64 timestamp = 4;

    /**
     * HTTP Response Code.
     */
    optional int32 status = 5;

    /**
     * Raw HTTP Headers.
     */
    map<string, Header> headers = 6;

    /**
     * HTTP cookies from the server.
     */
    repeated Cookie cookies = 7;

    /**
     * MIME type of the body.
     */
    optional string contentType = 8;

    /**
     * Body of the response.
     */
    optional bytes body = 9;
}

/**
 * HTTP Protocol.
 *
 * <p>
 * See Also: https://netty.io/4.0/api/io/netty/handler/codec/http/HttpVersion.html
 * </p>
 */
message Protocol
{
    optional string text = 1;

    optional string name = 2;

    optional int32 majorVersion = 3;

    optional int32 minorVersion = 4;
}


/**
 * HTTP Query Parameter.
 */
message QueryParameter
{
    /**
     * Parameter Name.
     */
    optional string key = 1;

    /**
     * Parameter Values, if any.
     */
    repeated string values = 2;
}

/**
 * HTTP Header.
 */
message Header
{
    optional string key = 1;

    repeated string values = 2;
}

/**
 * HTTP Cookie.
 *
 * <p>
 * See Also: https://netty.io/4.1/api/io/netty/handler/codec/http/cookie/Cookie.html
 * </p>
 */
message Cookie
{
    optional string domain = 1;

    optional bool httpOnly = 2;

    optional int64 maxAge = 3;

    optional string path = 4;

    optional bool secure = 5;

    optional string value = 6;

    optional string wrap = 7;
}


